#include<bits/stdc++.h>
using namespace std;

class Graph{
    int vertex;
    list<int> *adjList;
    
    public:
    Graph(int v){
        vertex= v;
        adjList= new list<int>[vertex];
    }
    
    void addEdge(int u, int v, bool biDirected= true){
        adjList[u].push_back(v);
        if(biDirected){
            adjList[v].push_back(u);
        }
    }
    
    void printAdjList(){
        for(int i=0; i< vertex; i++){
            cout<<i<<" -> ";
            for(auto node: adjList[i]){
                cout<<node<<", ";
            }
            cout<<"\n";
        }
    }
    // to make dynamic array we simply use pointer to refer new allocated dynamic memory ie,    int *arr= new int[size]
};

int main(){
    Graph g(4);
    g.addEdge(0,1);
    g.addEdge(0,2);
    g.addEdge(0,3);
    g.addEdge(1,3);
    g.addEdge(2,3);
    
    g.printAdjList();
    
    return 0;
}